// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using practicaWebApiManga;

#nullable disable

namespace practicaWebApiManga.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GeneroOrigenDelManga", b =>
                {
                    b.Property<int>("GeneroId")
                        .HasColumnType("int");

                    b.Property<int>("OrigenDelMangaId")
                        .HasColumnType("int");

                    b.HasKey("GeneroId", "OrigenDelMangaId");

                    b.HasIndex("OrigenDelMangaId");

                    b.ToTable("GeneroOrigenDelManga");

                    b.HasData(
                        new
                        {
                            GeneroId = 1,
                            OrigenDelMangaId = 1
                        },
                        new
                        {
                            GeneroId = 4,
                            OrigenDelMangaId = 1
                        });
                });

            modelBuilder.Entity("practicaWebApiManga.Entidad.CapituloMangas", b =>
                {
                    b.Property<int>("CapituloMangasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CapituloMangasId"), 1L, 1);

                    b.Property<int>("NumeroCap")
                        .HasColumnType("int");

                    b.Property<int>("OrigenDelMangaid")
                        .HasColumnType("int");

                    b.HasKey("CapituloMangasId");

                    b.HasIndex("OrigenDelMangaid");

                    b.ToTable("capituloMangas");
                });

            modelBuilder.Entity("practicaWebApiManga.Entidad.CapituloSheet", b =>
                {
                    b.Property<int>("CapituloSheetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CapituloSheetId"), 1L, 1);

                    b.Property<int>("CapituloMangasId")
                        .HasColumnType("int");

                    b.Property<int>("OrdenDeSheet")
                        .HasColumnType("int");

                    b.Property<string>("urlSheetM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CapituloSheetId", "CapituloMangasId");

                    b.HasIndex("CapituloMangasId");

                    b.ToTable("capituloSheets");
                });

            modelBuilder.Entity("practicaWebApiManga.Entidad.Genero", b =>
                {
                    b.Property<int>("GeneroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GeneroId"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GeneroId");

                    b.ToTable("generos");

                    b.HasData(
                        new
                        {
                            GeneroId = 1,
                            Nombre = "Acción"
                        },
                        new
                        {
                            GeneroId = 2,
                            Nombre = "Animación"
                        },
                        new
                        {
                            GeneroId = 3,
                            Nombre = "Comedia"
                        },
                        new
                        {
                            GeneroId = 4,
                            Nombre = "Ciencia ficción"
                        },
                        new
                        {
                            GeneroId = 5,
                            Nombre = "Drama"
                        },
                        new
                        {
                            GeneroId = 6,
                            Nombre = "Hentai"
                        },
                        new
                        {
                            GeneroId = 7,
                            Nombre = "Ecchi"
                        });
                });

            modelBuilder.Entity("practicaWebApiManga.Entidad.OrigenDelManga", b =>
                {
                    b.Property<int>("OrigenDelMangaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrigenDelMangaId"), 1L, 1);

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imagenPresentacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrigenDelMangaId");

                    b.ToTable("origenDelMangas");

                    b.HasData(
                        new
                        {
                            OrigenDelMangaId = 1,
                            descripcion = "El agente de inteligencia de “HID” y su hermano gemelo Baek Do-gyeong, el jefe de una organización criminal. Hermanos gemelos que vivieron el mismo rostro y vidas diferentes. El hermano menor que fue traicionado por la organización decide abandonar su identidad y convertirse en el hermano mayor. ¡Un agente de inteligencia se convierte en el jefe de una organización criminal…!",
                            imagenPresentacion = "https://dashboard.olympusscans.com/storage/comics/covers/8/8a4ab252a7c88ecca32113dbf5cb546ebb934d9f_s2_n2-xl.webp",
                            titulo = "Baek XX"
                        });
                });

            modelBuilder.Entity("GeneroOrigenDelManga", b =>
                {
                    b.HasOne("practicaWebApiManga.Entidad.Genero", null)
                        .WithMany()
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("practicaWebApiManga.Entidad.OrigenDelManga", null)
                        .WithMany()
                        .HasForeignKey("OrigenDelMangaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("practicaWebApiManga.Entidad.CapituloMangas", b =>
                {
                    b.HasOne("practicaWebApiManga.Entidad.OrigenDelManga", "OrigenDelManga")
                        .WithMany("CapituloMangas")
                        .HasForeignKey("OrigenDelMangaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrigenDelManga");
                });

            modelBuilder.Entity("practicaWebApiManga.Entidad.CapituloSheet", b =>
                {
                    b.HasOne("practicaWebApiManga.Entidad.CapituloMangas", "CapituloMangas")
                        .WithMany("capituloSheets")
                        .HasForeignKey("CapituloMangasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CapituloMangas");
                });

            modelBuilder.Entity("practicaWebApiManga.Entidad.CapituloMangas", b =>
                {
                    b.Navigation("capituloSheets");
                });

            modelBuilder.Entity("practicaWebApiManga.Entidad.OrigenDelManga", b =>
                {
                    b.Navigation("CapituloMangas");
                });
#pragma warning restore 612, 618
        }
    }
}
